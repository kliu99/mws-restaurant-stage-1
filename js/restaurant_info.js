let restaurant;var newMap;document.addEventListener("DOMContentLoaded",e=>{initMap()}),initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.newMap=L.map("map",{center:[t.latlng.lat,t.latlng.lng],zoom:16,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoiY29vbHphaSIsImEiOiJjamlibzA2OTAxazB2M3dxcWN0c3pzMDhoIn0.CJ9t2xsAarBDlFOmyQ1_Sg",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.newMap))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,n)=>{self.restaurant=n,n?(fillRestaurantHTML(),e(null,n)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.className="restaurant-img",t.src=DBHelper.imageUrlForRestaurant(e),t.alt=DBHelper.imageAltForRestaurant(e),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,document.getElementById("restaurant-favorite").onclick=(()=>{const t=e.id,n="true"==String(e.is_favorite);fetch(`http://localhost:1337/restaurants/${t}/?is_favorite=${!n}`,{method:"PUT"}).then(e=>e.json()).then(t=>{e=self.restaurant=t,updateFavoriteButton()})}),updateFavoriteButton(),e.operating_hours&&fillRestaurantHoursHTML(),fetch(`http://localhost:1337/reviews/?restaurant_id=${e.id}`).then(e=>e.json()).then(e=>{self.restaurant.reviews=e,fillReviewsHTML()})}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const r=document.createElement("tr"),a=document.createElement("td");a.innerHTML=n,r.appendChild(a);const o=document.createElement("td");o.innerHTML=e[n],r.appendChild(o),t.appendChild(r)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container"),n=document.createElement("h3");if(n.innerHTML="Reviews",t.appendChild(n),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const r=document.getElementById("reviews-list");e.forEach(e=>{r.appendChild(createReviewHTML(e))}),t.appendChild(r)}),createReviewHTML=(e=>{const t=document.createElement("li"),n=document.createElement("p");n.innerHTML=e.name,t.appendChild(n);const r=document.createElement("p");r.innerHTML=formatDate(e.updatedAt||Date.now()),t.appendChild(r);const a=document.createElement("p");let o="";for(let t=1;t<=5;t++)t<parseInt(e.rating)?o+="★":o+="☆";a.innerHTML=`Rating: ${o}`,t.appendChild(a);const s=document.createElement("p");return s.innerHTML=e.comments,t.appendChild(s),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li"),r=document.createElement("a");r.innerHTML=e.name,r.href="#",r.setAttribute("aria-current","page"),n.appendChild(r),t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}),updateFavoriteButton=(()=>{const e=document.getElementById("restaurant-favorite"),t="true"==String(self.restaurant.is_favorite);"true"==String(t)?(e.innerHTML="- Remove from Favorites",e.setAttribute("aria-label","remove restaurant from favorites")):(e.innerHTML="+ Add to Favorites",e.setAttribute("aria-label","add restaurant to favorites"))}),submitReview=(()=>{let e=document.getElementById("write-review-form");const t=self.restaurant,n=e.elements.name.value,r=e.elements.rating.value,a=e.elements.comments.value,o={restaurant_id:parseInt(t.id),name:n,rating:parseInt(r),comments:a};db.outbox.add(o).then(()=>fetch("http://localhost:1337/reviews/",{method:"POST",body:JSON.stringify(o)})).then(e=>e.json()).then(e=>{appendReview(e),db.outbox.delete(o.id)}).catch(e=>{appendReview(o),console.error(e)})}),appendReview=(e=>{const t=document.getElementById("write-review-form");document.getElementById("reviews-list").appendChild(createReviewHTML(e)),t.reset()}),formatDate=(e=>{const t=new Date(e),n=t.getDate(),r=t.getMonth(),a=t.getFullYear();return`${["January","February","March","April","May","June","July","August","September","October","November","December"][r]} ${n}, ${a}`});